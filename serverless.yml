org: charlesanthonyalfonso
app: message-board
service: message-board

frameworkVersion: '2'

custom:
  userTableName: 'users-table-${self:provider.stage}'
  boardTableName: 'boards-table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: '20201221'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
            - Fn::GetAtt: [ BoardsTable, Arn ]
  environment:
    USERS_TABLE: ${self:custom.userTableName}
    BOARDS_TABLE: ${self:custom.boardTableName}

functions:
  users:
    handler: users.handler
    events:
      - http:
          path: /users
          method: ANY
      - http:
          path: /users/{proxy+}
          method: ANY
  boards:
    handler: boards.handler
    events:
      - http:
          path: /boards
          method: ANY
      - http:
          path: /boards/{proxy+}
          method: ANY

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.userTableName}
    BoardsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: boardId
            AttributeType: S
        KeySchema:
          - AttributeName: boardId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.boardTableName}
